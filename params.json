{"name":"Winterfern","tagline":"A simple dependency tracker for .NET applications","body":"###Winterfern\r\n**Winterfern** is a simple dependency tracker for .NET applications using elementary parsing algorithm. My vision is to create full technology stack report on each application covering platforms, components, techniques, and tools... but im very far from it ;)\r\n\r\nBy consistently monitoring the technology stack in our application portfolio, we can plan for component upgrades, monitor 3rd party usage and licenses, consolidate component versions, or strategize decommisioning of projects and tools. \r\n\r\nSupported use cases:\r\n- Identify applications built on Visual Studio from 2001 to 2015.\r\n- Identify GAC and DLL dependencies used in each project in your solution.\r\n- Extensible to suport new trackers and sinks.\r\n\r\n####How it works\r\nWinterfern scans the entire workspace folder to perform analysis of VS solutions and projects to build dependency tree.\r\nSinks are create to save result into specific format or destination.\r\n\r\n####Disclaimer\r\nWinterfern is a tool i initially developed for personal use and and no guarantee 100% reliability.\r\nThis is not runtime dependency tracer. If you need more sophisticated analysis I recommend Dependency Walker, ILSPy, NDepend or Reflector tools.\r\n\r\n####Future\r\n- Deploy as microservice in cloud where users can upload zip and returns a full dependency report\r\n\r\n#### Support or Contact\r\nTwitter: @rdagumampan\r\nEmail: rdagumampan/AT/gmail.com\r\nBlog: [http://rdagumampan.wordpress.com](http://rdagumampan.wordpress.com)","google":"UA-72851429-2","note":"Don't delete this file! It's used internally to help with page regeneration."}