{"name":"Winterfern","tagline":"A simple dependency tracker for .NET applications","body":"####Arnis \r\n**Arnis** is a no-brainer dependency tracker for .NET applications using elementary parsing algorithm. \r\n\r\n![](https://ci.appveyor.com/api/projects/status/github/rdagumampan/arnis?branch=master&svg=true)\r\n\r\nAt the moment, you can:\r\n- track applications built on Visual Studio from 2001 to 2015.\r\n- track target framework versions\r\n- track referenced assemblies from nuget packages and GAC/Referenced Assesmblies folder.\r\n- extensible to support new trackers and sinks.\r\n\r\nBy consistently monitoring the technology stack in our application portfolio, we can better plan for component upgrades, monitor 3rd party usage, consolidate component versions, or strategize decommisioning of projects and tools.\r\n\r\n####How to use\r\n    c:\\arnis /wf:\"<your_workspace_folder>\" /sf:\"<your_desired_csv_file>\" /skf:<skip_these_folders>\r\n\r\nExample (simple):\r\n\r\n\tc:\\arnis /wf:\"c:\\github\\arnis\" /sf:\"c:\\stackreport.arnis.csv\"\r\n\r\nExample (with skip file):\r\n\r\n\tc:\\arnis /wf:\"c:\\github\\arnis\" /sf:\"c:\\stackreport.arnis.csv\" /skf:\"c:\\skip.txt\"\r\n    \r\n    where skip.txt contains\r\n    c:\\arnis\\bin\\debug\r\n    c:\\arnis\\packages\r\n\r\n####How it works\r\nArnis scans the target workspace folder and perform analysis of solutions and projects. Then the tracker's results are consolidated to form a dependency tree .\r\n\r\n- **VisualStudioTracker**\r\nScans working folder for solution files and identify the version of Visual Studio used.\r\n- **ReferencedAssembliesTracker**\r\nScans working folder for project files and identify all DLL used in the project. System DLLs are also included.\r\n\r\nSinks saves the result into specific format or destination. Currently, only CSV file format is supported.\r\n\r\n- **CsvStackReportSink**\r\nSave the report into CSV file\r\n\r\n![](https://rdagumampan.files.wordpress.com/2016/02/arnisresult.png)\r\n\r\n####Disclaimer\r\nArnis does not guarantee 100% reliability. This is not a runtime dependency tracer. For more sophisticated runtime analysis, consider [Dependency Walker](http://www.dependencywalker.com/), [ILSPy](https://github.com/icsharpcode/ILSpy), [NDepend](http://www.ndepend.com/) or [Reflector](http://www.red-gate.com/products/dotnet-development/reflector/) tools.\r\n\r\n####Future\r\n- support tracking web projects dependencies\r\n- a sink targetting a Web API in azure and deploy simple site to view the full dependency report\r\n- a webui to visualize dependency tree\r\n\r\n#### Support or Contact\r\nTwitter: @rdagumampan\r\nEmail: rdagumampan/AT/gmail.com\r\nBlog: [http://rdagumampan.wordpress.com](http://rdagumampan.wordpress.com)","google":"UA-72851429-2","note":"Don't delete this file! It's used internally to help with page regeneration."}